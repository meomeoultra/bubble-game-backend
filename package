require('dotenv').config();
const express = require('express');
const cors = require('cors');
const { Pool } = require('pg');

const app = express();
app.use(cors());
app.use(express.json());

// Kết nối PostgreSQL
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: { rejectUnauthorized: false } // cần nếu Render dùng SSL
});

// Test API
app.get('/', (req, res) => {
  res.send('Bubble Game Backend is running!');
});

// Lấy leaderboard top 10
app.get('/leaderboard', async (req, res) => {
  try {
    const result = await pool.query(
      'SELECT name, score FROM leaderboard ORDER BY score DESC LIMIT 10'
    );
    res.json(result.rows);
  } catch (err) {
    console.error(err);
    res.status(500).send('Server error');
  }
});

// Thêm score mới
app.post('/leaderboard', async (req, res) => {
  const { name, score } = req.body;
  if (!name || score == null) return res.status(400).send('Invalid data');

  try {
    await pool.query(
      'INSERT INTO leaderboard(name, score) VALUES($1, $2)',
      [name, score]
    );
    res.status(201).send('Score added');
  } catch (err) {
    console.error(err);
    res.status(500).send('Server error');
  }
});

// Lắng nghe port
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
